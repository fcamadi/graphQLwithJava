type Query {
    """
    It allows to retrieve a list of countries that match the specified criteria
    """
    countries(criteria: CountryCriteria): [Country]
    """
    It allows to retrieve a country with a list of its provinces that match the specified criteria
    """
    country(criteria: ProvinceCriteria): Country
    """
    It allows to retrieve a list of provinces that match the specified criteria
    """
    provinces(criteria: ProvinceCriteria): [Province]
    """
    It allows to retrieve a list of places that match the specified criteria (the name)
    """
    places(criteria: PlaceCriteria): [Place]
}

scalar Surface

input IntRange {
    above: Int
    below: Int
}

input PlaceCriteria {
    name: String
}

input CountryCriteria {
    continent: Continent
    populationRange: IntRange
}

input ProvinceCriteria {
    country: String
    populationRange: IntRange
}

"""
List of continents
"""
enum Continent {
    Europe
    Asia
    Africa
    SouthAmerica
    NorthAmerica
    Oceania
}

interface Place {
    name: String!
    population: Int
}

"""
Info about countries
"""
type Country implements Place {
    code: ID!
    name: String!
    population: Int
    area: Surface
    capital: City
    provinces: [Province!]
}

"""
Info about cities
"""
type City implements Place {
    name: String!
    population: Int
    geoLocation: GeoCoord
    elevation: Int
    province: Province
}

"""
Info about provinces
"""
type Province implements Place {
    name: String!
    population: Int
    capital: City
    area: Int
}

type GeoCoord {
    latitude: Float!
    longitude: Float!
}

#union Place = Country | Province | City